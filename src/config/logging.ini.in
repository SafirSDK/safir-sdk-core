[SystemLog]

;Control whether logs are sent to the native operating system logging mechanism. On Linux this is the syslog(...) function,
;and on Windows the logs will be put in the Windows Event Log.
native_logging=true

;Control whether logs will be sent to a syslog server on a UDP socket.
send_to_syslog_server=false

;The address that syslog message will be sent to if send_to_syslog_server is true.
syslog_server_address=127.0.0.1

;The port that syslog message will be sent to if send_to_syslog_server is true.
syslog_server_port=514

;Some syslog daemons will truncate logs containing newlines. This setting makes Safir Logging replace newlines with a space.
replace_newline_with_space=true

[LowLevelLog]
;If 'disabled' is true the LowLevelLog is disabled completely for all applications, and is not possible to 
;turn on in runtime. To be able to turn it on and off in runtime you need to set 'disabled' to false.
disabled=true

;Set the log level that will be used upon startup. This can be set when logging needs to be turned on by default.
;If you just want to change logging level in runtime you can use logger_control or dobexplorer.
log_level=0

;Directory where the logs are put.
log_directory=@DEFAULT_LOG_DIRECTORY@

;Ignore flushes, and write only when buffer is full. Setting this option to true reduces logging overhead, 
;but can cause unflushed log output to be lost on crashes.
ignore_flush=false

;Control whether timestamps on are added to each line in the logs. Setting this option to false reduces logging overhead.
show_timestamps=true

;Control whether logs are output to standard output. Setting this option to false reduces logging overhead, in case
;you are just using the log files.
to_standard_output=true

;Control whether logs are output to file. Setting this option to false reduces logging overhead, in case you are
;just using the standard output logging.
to_file=true
