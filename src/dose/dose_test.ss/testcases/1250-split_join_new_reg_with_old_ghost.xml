<?xml version="1.0" encoding="utf-8"?>
<object xmlns="urn:safir-dots-unit">
    <name>DoseTest.Items.TestCase</name>
    <members>
        <member>
            <!-- This test is valid only in multinode mode -->
            <name>TestConfig</name>
            <value>DoseTest.TestConfigEnum.Multinode</value>
        </member>
        <member>
            <name>Description</name>
            <value>
                Test that a split/join between two nodes, where node 0 contains an old ghost and node one has an existing handler while joining the nodes.
                Partner 0 Register a handler. Partner 2 register a pending handler. Partner 2 subscribes. Disconnect nodes. Partner 0 creates an instances and then
                unregisters. Connect nodes again.
            </value>
        </member>
        <member>
            <name>Expectation</name>
            <value>After join: No entities and no ghosts shall exist on any node.</value>
        </member>
        <member>
            <name>TestCaseSetupActions</name>
            <arrayElements>
                <!--Partner 0 Register injection handler-->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>0</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.RegisterEntityHandlerInjection</value>
                            </member>
                            <member>
                                <name>TypeId</name>
                                <value>DoseTest.SynchronousVolatileEntity</value>
                            </member>
                            <member>
                                <name>Handler</name>
                                <value>DEFAULT_HANDLER</value>
                            </member>
                            <member>
                                <name>InstanceIdPolicy</name>
                                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
                            </member>
                            <member>
                                <name>Consumer</name>
                                <value>0</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!--Partner 2 Register pending handler-->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>2</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.RegisterEntityHandlerPending</value>
                            </member>
                            <member>
                                <name>TypeId</name>
                                <value>DoseTest.SynchronousVolatileEntity</value>
                            </member>
                            <member>
                                <name>Handler</name>
                                <value>DEFAULT_HANDLER</value>
                            </member>
                            <member>
                                <name>InstanceIdPolicy</name>
                                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
                            </member>
                            <member>
                                <name>Consumer</name>
                                <value>0</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!-- Partner 1 subscribes -->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>1</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.SubscribeEntity</value>
                            </member>
                            <member>
                                <name>TypeId</name>
                                <value>DoseTest.SynchronousVolatileEntity</value>
                            </member>
                            <member>
                                <name>IncludeUpdates</name>
                                <value>true</value>
                            </member>
                            <member>
                                <name>RestartSubscription</name>
                                <value>false</value>
                            </member>
                            <member>
                                <name>IncludeSubclasses</name>
                                <value>true</value>
                            </member>
                            <member>
                                <name>Consumer</name>
                                <value>0</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!-- Disconnect the nodes (assuming that partner 0 and 2 are running in separate nodes) -->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>0</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
                            </member>
                            <member>
                                <name>Inhibit</name>
                                <value>True</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>2</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
                            </member>
                            <member>
                                <name>Inhibit</name>
                                <value>True</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!-- Wait for the nodes to detect the communication failure -->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.Sleep</value>
                            </member>
                            <member>
                                <name>SleepDuration</name>
                                <value>10</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
            </arrayElements>
        </member>
        <member>
            <name>TestActions</name>
            <arrayElements>
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>0</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.SetAll</value>
                            </member>
                            <member>
                                <name>Instance</name>
                                <value>123</value>
                            </member>
                            <member>
                                <name>Object</name>
                                <object>
                                    <name>DoseTest.SynchronousVolatileEntity</name>
                                    <members>
                                        <member>
                                            <name>Info</name>
                                            <value>Kalle</value>
                                        </member>
                                    </members>
                                </object>
                            </member>
                            <member>
                                <name>Handler</name>
                                <value>DEFAULT_HANDLER</value>
                            </member>
                            <member>
                                <name>Consumer</name>
                                <value>0</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!-- Make an unregister/register while disconnected -->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>0</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.UnregisterHandler</value>
                            </member>
                            <member>
                                <name>TypeId</name>
                                <value>DoseTest.SynchronousVolatileEntity</value>
                            </member>
                            <member>
                                <name>Handler</name>
                                <value>DEFAULT_HANDLER</value>
                            </member>
                            <member>
                                <name>Consumer</name>
                                <value>0</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.Sleep</value>
                            </member>
                            <member>
                                <name>SleepDuration</name>
                                <value>5</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!-- Connect the nodes -->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>0</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
                            </member>
                            <member>
                                <name>Inhibit</name>
                                <value>False</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>2</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
                            </member>
                            <member>
                                <name>Inhibit</name>
                                <value>False</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!-- Wait for the nodes to detect the communication failure -->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.Sleep</value>
                            </member>
                            <member>
                                <name>SleepDuration</name>
                                <value>30</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <!--Partner 0 Overregister injection handler, now there shall be no entities injected-->
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>Partner</name>
                                <value>0</value>
                            </member>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.RegisterEntityHandlerInjection</value>
                            </member>
                            <member>
                                <name>TypeId</name>
                                <value>DoseTest.SynchronousVolatileEntity</value>
                            </member>
                            <member>
                                <name>Handler</name>
                                <value>DEFAULT_HANDLER</value>
                            </member>
                            <member>
                                <name>InstanceIdPolicy</name>
                                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
                            </member>
                            <member>
                                <name>Consumer</name>
                                <value>0</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
                <arrayElement>
                    <object>
                        <name>DoseTest.Action</name>
                        <members>
                            <member>
                                <name>ActionKind</name>
                                <value>DoseTest.ActionEnum.Sleep</value>
                            </member>
                            <member>
                                <name>SleepDuration</name>
                                <value>5</value>
                            </member>
                        </members>
                    </object>
                </arrayElement>
            </arrayElements>
        </member>
    </members>
</object>

