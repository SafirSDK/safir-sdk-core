<?xml version="1.0" encoding="utf-8"?>
<object xmlns="urn:safir-dots-unit">
  <name>DoseTest.Items.TestCase</name>
  <members>
    <member>
      <!-- This test is valid only in multinode mode -->
      <name>TestConfig</name>
      <value>DoseTest.TestConfigEnum.Multinode</value>
    </member>    
    <member>
      <name>Description</name>
      <value>Test that a split/join between a server and a client (no redundancy), where the server makes a "reregistration" during the split, gives consistent caches when joined.</value>
    </member>
    <member>
      <name>Expectation</name>
      <value>Partner 2: Receives OnNewEntity for GlobalEntity inst 543 and SynchronousVolatileEntity inst 876. After the split, OnDeletedEntity (deletedByOwner=false) is received. After the join, OnNewEntity with info members that indicates 'SET IN NEW REGISTRATION' is received. Partner 1: Receivies subscription callbacks corresponding to partner 0 actions.</value>
    </member>
    <member>
      <name>TestCaseSetupActions</name>
      <arrayElements>

        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.RegisterEntityHandler</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>InstanceIdPolicy</name>
                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.RegisterEntityHandlerPending</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>InstanceIdPolicy</name>
                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>

        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SetAll</value>
              </member>
              <member>
                <name>Instance</name>
                <value>543</value>
              </member>
              <member>
                <name>Object</name>
                <object>
                  <name>DoseTest.GlobalEntity</name>
                  <members>
                    <member>
                      <name>Info</name>
                      <value>Instance 543 created by partner 0</value>
                    </member>
                  </members>
                </object>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>

        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SetAll</value>
              </member>
              <member>
                <name>Instance</name>
                <value>876</value>
              </member>
              <member>
                <name>Object</name>
                <object>
                  <name>DoseTest.SynchronousVolatileEntity</name>
                  <members>
                    <member>
                      <name>Info</name>
                      <value>Instance 876 created by partner 0</value>
                    </member>
                  </members>
                </object>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>

        <!-- Set up subscriptions to both types in node 1 (Partner 2) -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>2</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>IncludeUpdates</name>
                <value>true</value>
              </member>
              <member>
                <name>RestartSubscription</name>
                <value>false</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>2</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>IncludeUpdates</name>
                <value>true</value>
              </member>
              <member>
                <name>RestartSubscription</name>
                <value>false</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>

        <!-- Set up subscriptions to both types in node 0 (Partner 1) -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>1</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>IncludeUpdates</name>
                <value>true</value>
              </member>
              <member>
                <name>RestartSubscription</name>
                <value>false</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>1</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>IncludeUpdates</name>
                <value>true</value>
              </member>
              <member>
                <name>RestartSubscription</name>
                <value>false</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>        
         
        <!-- Disconnect the nodes (assuming that partner 0 and 2 are running in separate nodes) -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
              </member>
              <member>
                <name>Inhibit</name>
                <value>True</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>2</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
              </member>
              <member>
                <name>Inhibit</name>
                <value>True</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <!-- Wait for the nodes to detect the communication failure -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.Sleep</value>
              </member>
              <member>
                <name>SleepDuration</name>
                <value>10</value>
              </member>
            </members>
          </object>
        </arrayElement>
      </arrayElements>
    </member>
    <member>
      <name>TestActions</name>
      <arrayElements>

        <!-- Make an unregister/register while disconnected -->        
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.UnregisterHandler</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.UnregisterHandler</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.RegisterEntityHandler</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>InstanceIdPolicy</name>
                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.RegisterEntityHandlerPending</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>InstanceIdPolicy</name>
                <value>Safir.Dob.InstanceIdPolicy.RequestorDecidesInstanceId</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>        

        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SetAll</value>
              </member>
              <member>
                <name>Instance</name>
                <value>543</value>
              </member>
              <member>
                <name>Object</name>
                <object>
                  <name>DoseTest.GlobalEntity</name>
                  <members>
                    <member>
                      <name>Info</name>
                      <value>Instance 543 SET IN NEW REGISTRATION by partner 0</value>
                    </member>
                  </members>
                </object>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.SetAll</value>
              </member>
              <member>
                <name>Instance</name>
                <value>876</value>
              </member>
              <member>
                <name>Object</name>
                <object>
                  <name>DoseTest.SynchronousVolatileEntity</name>
                  <members>
                    <member>
                      <name>Info</name>
                      <value>Instance 876 SET IN NEW REGISTRATION by partner 0</value>
                    </member>
                  </members>
                </object>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>        

        <!-- Connect the nodes -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
              </member>
              <member>
                <name>Inhibit</name>
                <value>False</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>2</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.InhibitOutgoingTraffic</value>
              </member>
              <member>
                <name>Inhibit</name>
                <value>False</value>
              </member>
            </members>
          </object>
        </arrayElement>        
        
        <!-- Wait for the nodes to detect each other and to exchange pools -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.Sleep</value>
              </member>
              <member>
                <name>SleepDuration</name>
                <value>30</value>
              </member>
            </members>
          </object>
        </arrayElement>

        <!-- Clean up testcase -->
        
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>1</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.UnsubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>         
        </arrayElement>
        <arrayElement>
          <object>
          <name>DoseTest.Action</name>
          <members>
            <member>
              <name>Partner</name>
              <value>1</value>
            </member>
            <member>
              <name>ActionKind</name>
              <value>DoseTest.ActionEnum.UnsubscribeEntity</value>
            </member>
            <member>
              <name>TypeId</name>
              <value>DoseTest.SynchronousVolatileEntity</value>
            </member>
            <member>
              <name>IncludeSubclasses</name>
              <value>true</value>
            </member>
            <member>
              <name>Consumer</name>
              <value>0</value>
            </member>
          </members>
        </object>
        </arrayElement>

        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>2</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.UnsubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>2</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.UnsubscribeEntity</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>IncludeSubclasses</name>
                <value>true</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>        

        <!-- Delete all existing instances -->
        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.DeleteAllInstances</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.GlobalEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>

        <arrayElement>
          <object>
            <name>DoseTest.Action</name>
            <members>
              <member>
                <name>Partner</name>
                <value>0</value>
              </member>
              <member>
                <name>ActionKind</name>
                <value>DoseTest.ActionEnum.DeleteAllInstances</value>
              </member>
              <member>
                <name>TypeId</name>
                <value>DoseTest.SynchronousVolatileEntity</value>
              </member>
              <member>
                <name>Handler</name>
                <value>DEFAULT_HANDLER</value>
              </member>
              <member>
                <name>Consumer</name>
                <value>0</value>
              </member>
            </members>
          </object>
        </arrayElement>

      </arrayElements>
    </member>
  </members>
</object>

