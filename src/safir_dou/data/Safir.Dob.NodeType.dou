<?xml version="1.0" encoding="utf-8" ?>
<class xmlns="urn:safir-dots-unit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <summary>Defines a number of characteristics that control how nodes of a certain type communicates. Used by Safir.Dob.NodeParameters.</summary>
    <name>Safir.Dob.NodeType</name>
    <baseClass>Safir.Dob.Item</baseClass>
    <members>
        <member>
            <summary>Name of the node type.</summary>
            <name>Name</name>
            <type>String</type>
            <maxLengthRef><name>Safir.Dob.NodeParameters.MaxNodeNameLength</name></maxLengthRef>
        </member>
        <member>
            <summary>Multicast address and port used for the control channel for nodes of this type. An empty string or null for this or MulticastAddressData indicates that nodes of this type can't be reached via multicast.</summary>
            <name>MulticastAddressControl</name>
            <type>String</type>
            <maxLength>500</maxLength>
        </member>
        <member>
            <summary>Multicast address and port used for the control channel for nodes of this type. An empty string or null for this or MulticastAddressControl indicates that nodes of this type can't be reached via multicast.</summary>
            <name>MulticastAddressData</name>
            <type>String</type>
            <maxLength>500</maxLength>
        </member>
        <member>
            <summary>How often shall heartbeats/keepalives be sent</summary>
            <name>HeartbeatInterval</name>
            <type>Second64</type>
        </member>
        <member>
            <summary>How many lost heartbeats before marking nodes of this type as dead.</summary>
            <name>MaxLostHeartbeats</name>
            <type>Int32</type>
        </member>
        <member>
            <summary>Size of the sliding window when communicating with this node.</summary>
            <name>SlidingWindowsSize</name>
            <type>Int32</type>
        </member>
        <member>
            <summary>Time to wait for Ack before retrying transmission to this node.</summary>
            <name>RetryTimeout</name>
            <type>Second64</type>
        </member>
        <member>
            <summary> If true, a node of this type can start a system of its own. A node with a node
                      type where this parameter is set to false will never start a system of its own, it
                      just waits for a system to join.</summary>
            <name>RequiredForStart</name>
            <type>Boolean</type>
        </member>
    </members>
</class>
