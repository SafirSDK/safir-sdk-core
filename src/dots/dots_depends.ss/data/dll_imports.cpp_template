/******************************************************************************
*
* Copyright Saab AB, 2006-2010 (http://www.safirsdk.com)
* 
* Created by: Mikael Wennerberg / stmiwn
*
*******************************************************************************
*
* This file is part of Safir SDK Core.
*
* Safir SDK Core is free software: you can redistribute it and/or modify
* it under the terms of version 3 of the GNU General Public License as
* published by the Free Software Foundation.
*
* Safir SDK Core is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with Safir SDK Core.  If not, see <http://www.gnu.org/licenses/>.
*
******************************************************************************/
//disable warnings in ace
#if defined _MSC_VER
#pragma warning (push)
#pragma warning (disable : 4267)
#endif

#include <ace/Guard_T.h>
#include <ace/Recursive_Thread_Mutex.h>

//and enable the warnings again
#if defined _MSC_VER
#pragma warning (pop)
#endif

#include "dll_imports.h"
#include <Safir/Utilities/Internal/LowLevelLogger.h>

#ifdef _MSC_VER

#include <windows.h>

#ifdef RegisterClass
#undef RegisterClass
#endif

#ifdef GetObject
#undef GetObject
#endif

#else
#include <dlfcn.h>
#endif

namespace Safir
{
    namespace Dob
    {
        namespace Typesystem
        {
            Dll_Imports * volatile Dll_Imports::m_pInstance = 0;

            bool Dll_Imports::Init()
            {
                if (!m_pInstance)
                {
                    static ACE_Recursive_Thread_Mutex creationLock;

                    ACE_Guard<ACE_Recursive_Thread_Mutex> lck(creationLock);
                    if (!m_pInstance)
                    {
                        m_pInstance = new Dll_Imports();
                        m_pInstance->LoadAllDlls();
                        return true;
                    }
                }
                return false;
            }

            Dll_Imports::Dll_Imports()
            {

            }

            Dll_Imports::~Dll_Imports()
            {

            }

            void Dll_Imports::LoadAllDlls()
            {
#ifdef _MSC_VER
#ifdef _DEBUG
@LoadLibraryD
#else
@LoadLibrary
#endif
#else
                void *lib_handle;
@dlopen
#endif
            }


        }
    }
}



