@@-------------------------------------------------------------------------------
@@--
@@--  Copyright Saab AB, 2005-2015 (http://safirsdkcore.com)
@@--
@@--  Created by: Henrik Sundberg / sthesu
@@--
@@-------------------------------------------------------------------------------
@@IF@@ @_SECTION_@ = "Parameters"
File_Suffix:".java"
Filename_Separator:"/"
Output_Directory:"java/src/"
Namespace_Separator:"."
@@-- Namspace prefixes are defined separately, since they are supposed to differ between projects.
@@-- Files matching <Namespace><Namespace_Prefix_File_Suffix> are searched for a line containing the namespace prefix
@@-- to use for <Namespace>. E.g. Namespace_Prefix_File_Prefix:"-java.namespace.txt" will match the file
@@-- "Safir-java.namespace.txt". The first non comment line in the file is used as namespace prefix.
@@-- Empty value is used when no namespace prefixes are to be added.
Namespace_Prefix_File_Suffix:"-java.namespace.txt"
@@-- Parent filename "" defaults to the namespace with added file suffix.
Parent_Filename:""
@@--
@@-- *_Underscore_Style is one of: "Add", "Remove", "Keep"
@@--
Namespace_Underscore_Style:"Keep"
Filename_Underscore_Style:"Keep"
Classname_Underscore_Style:"Keep"
Membername_Underscore_Style:"Keep"
Enum_Value_Underscore_Style:"Add"
@@--
@@-- *_Case_Style is one of: "Upper", "Lower", "Camel", "Keep"
@@--
Namespace_Case_Style:"Lower"
Filename_Case_Style:"Keep"
Classname_Case_Style:"Keep"
Membername_Case_Style:"Keep"
Enum_Value_Case_Style:"Upper"
Object_Type:"Object"
Index_Type:"Int32"
@@--
@@-- Exceptions are defined like this:
@@--   Exception:<dou>:"<generated>":"<dependency>"
@@-- E.g.:
@@--   Exception:illegalValue:"safir::dob.typesystem::IllegalValue":"dots/dots_defs"
@@-- defines "illegalValue" as an exceptionname in the xml-syntax (dou-file).
@@-- And "safir::dob.typesystem::IllegalValue" to be used where the actual type is needed in the code.
@@-- And that "dots/dots_defs" (with file extension added below) is to be included due to this.
@@--
Exception:Exception:"com.saabgroup.safir.dob.typesystem.Exception":"com.saabgroup.safir.dob.typesystem.Exception"
Exception:FundamentalException:"com.saabgroup.safir.dob.typesystem.FundamentalException":"com.saabgroup.safir.dob.typesystem.FundamentalException"
Exception:Safir.Dob.Typesystem.ConfigurationErrorException:"com.saabgroup.safir.dob.typesystem.ConfigurationErrorException":"com.saabgroup.safir.dob.typesystem.ConfigurationErrorException"
Exception:Safir.Dob.Typesystem.IncompatibleTypesException:"com.saabgroup.safir.dob.typesystem.IncompatibleTypesException":"com.saabgroup.safir.dob.typesystem.IncompatibleTypesException"
Exception:Safir.Dob.Typesystem.IllegalValueException:"com.saabgroup.safir.dob.typesystem.IllegalValueException":"com.saabgroup.safir.dob.typesystem.IllegalValueException"
Exception:Safir.Dob.Typesystem.NullException:"com.saabgroup.safir.dob.typesystem.NullException":"com.saabgroup.safir.dob.typesystem.NullException"
Exception:Safir.Dob.Typesystem.ReadOnlyException:"com.saabgroup.safir.dob.typesystem.ReadOnlyException":"com.saabgroup.safir.dob.typesystem.ReadOnlyException"
Exception:Safir.Dob.Typesystem.SoftwareViolationException:"com.saabgroup.safir.dob.typesystem.SoftwareViolationException":"com.saabgroup.safir.dob.typesystem.SoftwareViolationException"
@@--
@@--
@@-- Types are defined like this:
@@--   Type:<dou>:<set/get>:"<generated>":"<dependency>"
@@-- E.g.:
@@--   Type:String:String:"safir::dob.typesystem::String":"dots/dots_defs"
@@-- defines "String" as a typename in the xml-syntax (dou-file).
@@-- And "String" to be the @_UNIFORM_MEMBERTYPE_@, used in the name of Set/Get routines.
@@-- And "safir::dob.typesystem::String" to be used where the actual type is needed in the code.
@@-- And that "dots/dots_defs" (with file extension added below) is to be included due to this.
@@--
Type:Int32:Int32:"int":"":"Integer"
Type:Int64:Int64:"long":"":"Long"
Type:Float32:Float32:"float":"":"Float"
Type:Float64:Float64:"double":"":"Double"
Type:Boolean:Boolean:"boolean":"":"Boolean"
Type:String:String:"String":""
Type:EntityId:EntityId:"com.saabgroup.safir.dob.typesystem.EntityId":""
Type:TypeId:TypeId:"long":"":"Long"
Type:InstanceId:InstanceId:"com.saabgroup.safir.dob.typesystem.InstanceId":""
Type:ChannelId:ChannelId:"com.saabgroup.safir.dob.typesystem.ChannelId":""
Type:HandlerId:HandlerId:"com.saabgroup.safir.dob.typesystem.HandlerId":""
Type:Binary:Binary:"byte[]":""
Type:Object:Object:"com.saabgroup.safir.dob.typesystem.Object":""
Type:Ampere32:si32.Ampere:"float":"":"Float"
Type:CubicMeter32:si32.CubicMeter:"float":"":"Float"
Type:Hertz32:si32.Hertz:"float":"":"Float"
Type:Joule32:si32.Joule:"float":"":"Float"
Type:Kelvin32:si32.Kelvin:"float":"":"Float"
Type:Kilogram32:si32.Kilogram:"float":"":"Float"
Type:Meter32:si32.Meter:"float":"":"Float"
Type:MeterPerSecond32:si32.MeterPerSecond:"float":"":"Float"
Type:MeterPerSecondSquared32:si32.MeterPerSecondSquared:"float":"":"Float"
Type:Newton32:si32.Newton:"float":"":"Float"
Type:Pascal32:si32.Pascal:"float":"":"Float"
Type:Radian32:si32.Radian:"float":"":"Float"
Type:RadianPerSecond32:si32.RadianPerSecond:"float":"":"Float"
Type:RadianPerSecondSquared32:si32.RadianPerSecondSquared:"float":"":"Float"
Type:Second32:si32.Second:"float":"":"Float"
Type:SquareMeter32:si32.SquareMeter:"float":"":"Float"
Type:Steradian32:si32.Steradian:"float":"":"Float"
Type:Volt32:si32.Volt:"float":"":"Float"
Type:Watt32:si32.Watt:"float":"":"Float"
Type:Ampere64:si64.Ampere:"double":"":"Double"
Type:CubicMeter64:si64.CubicMeter:"double":"":"Double"
Type:Hertz64:si64.Hertz:"double":"":"Double"
Type:Joule64:si64.Joule:"double":"":"Double"
Type:Kelvin64:si64.Kelvin:"double":"":"Double"
Type:Kilogram64:si64.Kilogram:"double":"":"Double"
Type:Meter64:si64.Meter:"double":"":"Double"
Type:MeterPerSecond64:si64.MeterPerSecond:"double":"":"Double"
Type:MeterPerSecondSquared64:si64.MeterPerSecondSquared:"double":"":"Double"
Type:Newton64:si64.Newton:"double":"":"Double"
Type:Pascal64:si64.Pascal:"double":"":"Double"
Type:Radian64:si64.Radian:"double":"":"Double"
Type:RadianPerSecond64:si64.RadianPerSecond:"double":"":"Double"
Type:RadianPerSecondSquared64:si64.RadianPerSecondSquared:"double":"":"Double"
Type:Second64:si64.Second:"double":"":"Double"
Type:SquareMeter64:si64.SquareMeter:"double":"":"Double"
Type:Steradian64:si64.Steradian:"double":"":"Double"
Type:Volt64:si64.Volt:"double":"":"Double"
Type:Watt64:si64.Watt:"double":"":"Double"
@@--
@@--
@@--
@@--
@@--
@@--
@@ELSIF@@ @_SECTION_@ = "Code"
@@--
@@-- HEADER
@@--
package @_NAMESPACE_@;

@@IF@@ @_UNITTYPE_@=property
@@--
@@-- PROPERTY
@@--
@@IF@@ @_EXIST:CLASSSUMMARY_@
/**
 * @_REPLACE_ALL(\n/\n * ):CLASSSUMMARY_@
 */
@@ELSE@@
/**
 * This property has no summary.
 */
@@END_IF@@
public class @_CLASS_@
{
    /**
     * Check if a certain object has a property mapping to this property.
     * @param obj Object to check
     * @return True if obj is mapped against this property.
     */
    public static boolean hasProperty(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        return com.saabgroup.safir.dob.typesystem.Operations.hasProperty(obj.getTypeId(), ClassTypeId);
    }

@@TABLE@@
@@IF@@ @_EXIST:MEMBER_@
    //@_MEMBER_@
@@IF@@ @_EXIST:MEMBERISARRAY_@
    /**
     * Get the array size of the member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @return Size of the array.
     */
    public static int get@_MEMBER_@ArraySize(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.getArraySize(obj.getTypeId(), ClassTypeId, @_LOWER:MEMBER_@Member);
    }

    /**
     * Set the value of the member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to modify.
     * @param index index in array to modify.
     * @param val Value to set @_MEMBER_@ to.
     */
    public static void set@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index, @_MEMBERTYPE_@ val)
    {
        init();
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
        com.saabgroup.safir.dob.typesystem.Properties.setEnum(obj, ClassTypeId, val.ordinal(), @_LOWER:MEMBER_@Member, index);
@@ELSE@@
        com.saabgroup.safir.dob.typesystem.Properties.set(obj, ClassTypeId, val, @_LOWER:MEMBER_@Member, index);
@@END_IF@@
    }

@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
 /**
     * Set the ordinal value of this enumeration member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to modify.
     * @param index index in array to modify.
     * @param ordinal Ordinal value to set @_MEMBER_@ to.
     */
    public static void setOrdinal@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index, int ordinal)
    {
        init();
        com.saabgroup.safir.dob.typesystem.Properties.setEnum(obj, ClassTypeId, ordinal, @_LOWER:MEMBER_@Member, index);
    }
@@END_IF@@

    /**
     * Set the member in obj that is mapped against the @_MEMBER_@ property member to null.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to modify.
     * @param index index in array to modify.
     */
    public static void setNull@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        com.saabgroup.safir.dob.typesystem.Properties.setNull(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }

    /**
     * Check if the member in obj that is mapped against the @_MEMBER_@ property member is null.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @param index index in array to check.
     * @return Value of the isNull flag.
     */
    public static boolean isNull@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.isNull(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }

    /**
     * Check if the member in obj that is mapped against the @_MEMBER_@ property member is changed.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @param index index in array to check.
     * @return Value of the isChanged flag.
     */
    public static boolean isChanged@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.isChanged(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }

    /**
     * Check if the member in obj that is mapped against the @_MEMBER_@ property member is read only.
     * (If the property member is mapped to "null" or a parameter the value is read only.)
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @param index index in array to check.
     * @return True if the member is read only.
     */
    public static boolean isReadOnly@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.isReadOnly(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }

    /**
     * Get the member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to get value from.
     * @param index index in array to read from.
     * @return The value of @_MEMBER_@.
     */
@@IF@@ @_MEMBERTYPE_@=com.saabgroup.safir.dob.typesystem.Object
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.getObject(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return (@_MEMBERTYPE_@)com.saabgroup.safir.dob.typesystem.Properties.getObject(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return @_MEMBERTYPE_@.values()
            [com.saabgroup.safir.dob.typesystem.Properties.getEnum(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index)];
    }
@@ELSE@@
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.get@_REPLACE(^si(..)\..*/Float\1):UNIFORM_MEMBERTYPE_@(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }
@@END_IF@@

@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    /**
     * Get the ordinal value of the enumeration member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to get value from.
     * @param index index in array to read from.
     * @return The value of @_MEMBER_@.
     */
    public static int getOrdinal@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.getEnum(obj, ClassTypeId, @_LOWER:MEMBER_@Member, index);
    }
@@END_IF@@
@@ELSE@@
    /**
     * Set the value of the member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     *  @param obj Object to modify.
     *  @param val Value to set @_MEMBER_@ to.
     */
    public static void set@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, @_MEMBERTYPE_@ val)
    {
        init();
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
        com.saabgroup.safir.dob.typesystem.Properties.setEnum(obj, ClassTypeId, val.ordinal(), @_LOWER:MEMBER_@Member, 0);
@@ELSE@@
        com.saabgroup.safir.dob.typesystem.Properties.set(obj, ClassTypeId, val, @_LOWER:MEMBER_@Member, 0);
@@END_IF@@
    }

@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
 /**
     * Set the ordinal value of this enumeration member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to modify.
     * @param ordinal Ordinal value to set @_MEMBER_@ to.
     */
    public static void setOrdinal@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj, int ordinal)
    {
        init();
        com.saabgroup.safir.dob.typesystem.Properties.setEnum(obj, ClassTypeId, ordinal, @_LOWER:MEMBER_@Member, 0);
    }
@@END_IF@@

    /**
     * Set the member in obj that is mapped against the @_MEMBER_@ property member to null.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to modify.
     */
    public static void setNull@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        com.saabgroup.safir.dob.typesystem.Properties.setNull(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }

    /**
     * Check if the member in obj that is mapped against the @_MEMBER_@ property member is null.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @return Value of the isNull flag.
     */
    public static boolean isNull@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.isNull(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }

    /**
     * Check if the member in obj that is mapped against the @_MEMBER_@ property member is changed.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @return Value of the isChanged flag.
     */
    public static boolean isChanged@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.isChanged(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }

    /**
     * Check if the member in obj that is mapped against the @_MEMBER_@ property member is read only.
     * (If the property member is mapped to "null" or a parameter the value is read only.)
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to check in.
     * @return True if the member is read only.
     */
    public static boolean isReadOnly@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.isReadOnly(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }

    /**
     * Get the member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to get value from.
     * @return The value of @_MEMBER_@.
     */
@@IF@@ @_MEMBERTYPE_@=com.saabgroup.safir.dob.typesystem.Object
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.getObject(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return (@_MEMBERTYPE_@)com.saabgroup.safir.dob.typesystem.Properties.getObject(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return @_MEMBERTYPE_@.values()
            [com.saabgroup.safir.dob.typesystem.Properties.getEnum(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0)];
    }
@@ELSE@@
    public static @_MEMBERTYPE_@ get@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.get@_REPLACE(^si(..)\..*/Float\1):UNIFORM_MEMBERTYPE_@(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }
@@END_IF@@

@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    /**
     * Get the ordinal value of the enumeration member in obj that is mapped against the @_MEMBER_@ property member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @param obj Object to get value from.
     * @return The value of @_MEMBER_@.
     */
    public static int getOrdinal@_MEMBER_@(com.saabgroup.safir.dob.typesystem.Object obj)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Properties.getEnum(obj, ClassTypeId, @_LOWER:MEMBER_@Member, 0);
    }
@@END_IF@@
@@END_IF@@

@@END_IF@@
@@END_TABLE@@
    /** Type id for @_CLASS_@ */
    public static final long ClassTypeId = @_TYPEID_@L;

    private static void init()
    {
        if (!isInit)
        {
@@TABLE@@
@@IF@@ @_EXIST:MEMBER_@
            @_LOWER:MEMBER_@Member=com.saabgroup.safir.dob.typesystem.Members.getIndex(ClassTypeId, "@_MEMBER_@");
@@END_IF@@
@@END_TABLE@@
            isInit=true;
        }
    }


    private static boolean isInit = false;

@@TABLE@@
@@IF@@ @_EXIST:MEMBER_@
    private static int @_LOWER:MEMBER_@Member = -1;
@@END_IF@@
@@END_TABLE@@
}
@@ELSIF@@ @_UNITTYPE_@=class
@@--
@@-- CLASS
@@--
@@IF@@ @_EXIST:CLASSSUMMARY_@
/**
 * @_REPLACE_ALL(\n/\n * ):CLASSSUMMARY_@
 */
@@ELSE@@
/**
 * This class has no summary.
 */
@@END_IF@@
public class @_CLASS_@
    extends @_BASECLASS_@ {
    /**
     * Default constructor.
     */
    public @_CLASS_@() {
        super();
    }

@@----- PARAMETERS --------
@@TABLE@@
@@IF@@ @_EXIST:PARAMETER_@
@@IF@@ @_EXIST:PARAMETERISARRAY_@
    /**
     * Get the array size of the @_PARAMETER_@ parameter.
     *
     * @_PARAMETER_@ summary:
@@IF@@ @_EXIST:PARAMETERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):PARAMETERSUMMARY_@
@@ELSE@@
     *     This parameter has no summary.
@@END_IF@@
     *
     * @return The array size of the @_PARAMETER_@ parameter.
     */
    public static int get@_PARAMETER_@ArraySize ()
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Parameters.getArraySize(ClassTypeId, m_@_PARAMETER_@Parameter);
    }

    /**
     * Get a value from the @_PARAMETER_@ parameter array.
     *
     * @_PARAMETER_@ summary:
@@IF@@ @_EXIST:PARAMETERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):PARAMETERSUMMARY_@
@@ELSE@@
     *     This parameter has no summary.
@@END_IF@@
     *
     * @param index Index of parameter to get.
     * @return The parameter value.
     */
@@IF@@ @_PARAMETERTYPE_@=com.saabgroup.safir.dob.typesystem.Object
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Parameters.get@_UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, index);
    }
@@ELSIF@@ @_UNIFORM_PARAMETERTYPE_@=Object
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(int index)
    {
        init();
        return (@_PARAMETERTYPE_@)com.saabgroup.safir.dob.typesystem.Parameters.get@_UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, index);
    }
@@ELSIF@@ @_UNIFORM_PARAMETERTYPE_@=Enumeration
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(int index)
    {
        init();
        int enumVal = com.saabgroup.safir.dob.typesystem.Parameters.getEnumeration
            (ClassTypeId,
             m_@_PARAMETER_@Parameter,
             index);

        return @_PARAMETERTYPE_@.values()[enumVal];
    }
@@ELSE@@
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(int index)
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Parameters.get@_REPLACE(^si(..)\..*/Float\1):UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, index);
    }
@@END_IF@@
@-------- dictionary parameter -----------
@@ELSIF@@ @_EXIST:PARAMETERISDICTIONARY_@
    /**
     * Get a value from the @_PARAMETER_@ parameter dictionary.
     *
     * @_PARAMETER_@ summary:
@@IF@@ @_EXIST:PARAMETERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):PARAMETERSUMMARY_@
@@ELSE@@
     *     This parameter has no summary.
@@END_IF@@
     *
     * @param key Key of parameter to get.
     * @return The parameter value.
     */
@@IF@@ @_PARAMETERTYPE_@=com.saabgroup.safir.dob.typesystem.Object
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(@_PARAMETERDICTIONARYTYPE_@ key)
    {
        init();
@@IF@@ @_UNIFORM_PARAMETERDICTIONARYTYPE_@=Enumeration
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key.ordinal());
@@ELSE@@
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key);
@@END_IF@@
        if (index<0) throw new com.saabgroup.safir.dob.typesystem.SoftwareViolationException("dictionary entry not found");
        return com.saabgroup.safir.dob.typesystem.Parameters.get@_UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, index);
    }
@@ELSIF@@ @_UNIFORM_PARAMETERTYPE_@=Object
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(@_PARAMETERDICTIONARYTYPE_@ key)
    {
        init();
@@IF@@ @_UNIFORM_PARAMETERDICTIONARYTYPE_@=Enumeration
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key.ordinal());
@@ELSE@@
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key);
@@END_IF@@
        if (index<0) throw new com.saabgroup.safir.dob.typesystem.SoftwareViolationException("dictionary entry not found");
        return (@_PARAMETERTYPE_@)com.saabgroup.safir.dob.typesystem.Parameters.get@_UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, index);
    }
@@ELSIF@@ @_UNIFORM_PARAMETERTYPE_@=Enumeration
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(@_PARAMETERDICTIONARYTYPE_@ key)
    {
        init();
@@IF@@ @_UNIFORM_PARAMETERDICTIONARYTYPE_@=Enumeration
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key.ordinal());
@@ELSE@@
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key);
@@END_IF@@
        if (index<0) throw new com.saabgroup.safir.dob.typesystem.SoftwareViolationException("dictionary entry not found");
        int enumVal = com.saabgroup.safir.dob.typesystem.Parameters.getEnumeration
            (ClassTypeId,
             m_@_PARAMETER_@Parameter,
             index);

        return @_PARAMETERTYPE_@.values()[enumVal];
    }
@@ELSE@@
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@(@_PARAMETERDICTIONARYTYPE_@ key)
    {
        init();
@@IF@@ @_UNIFORM_PARAMETERDICTIONARYTYPE_@=Enumeration
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key.ordinal());
@@ELSE@@
        int index = com.saabgroup.safir.dob.typesystem.Parameters.dictionaryKeyToIndex(ClassTypeId, m_@_PARAMETER_@Parameter, key);
@@END_IF@@
        if (index<0) throw new com.saabgroup.safir.dob.typesystem.SoftwareViolationException("dictionary entry not found");
        return com.saabgroup.safir.dob.typesystem.Parameters.get@_REPLACE(^si(..)\..*/Float\1):UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, index);
    }
@@END_IF@@

@-------- single parameter -----------
@@ELSE@@
    /**
     * Get the value of the @_PARAMETER_@ parameter.
     *
     * @_PARAMETER_@ summary:
@@IF@@ @_EXIST:PARAMETERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):PARAMETERSUMMARY_@
@@ELSE@@
     *     This parameter has no summary.
@@END_IF@@
     *
     * @return The value of the @_PARAMETER_@ parameter.
     */
@@IF@@ @_PARAMETERTYPE_@=com.saabgroup.safir.dob.typesystem.Object
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@()
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Parameters.get@_UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, 0);
    }
@@ELSIF@@ @_UNIFORM_PARAMETERTYPE_@=Object
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@()
    {
        init();
        return (@_PARAMETERTYPE_@)com.saabgroup.safir.dob.typesystem.Parameters.getObject(ClassTypeId, m_@_PARAMETER_@Parameter, 0);
    }
@@ELSIF@@ @_UNIFORM_PARAMETERTYPE_@=Enumeration
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@()
    {
        init();
        int enumVal = com.saabgroup.safir.dob.typesystem.Parameters.getEnumeration
            (ClassTypeId,
             m_@_PARAMETER_@Parameter,
             0);

        return @_PARAMETERTYPE_@.values()[enumVal];
    }
@@ELSE@@
    public static @_PARAMETERTYPE_@ get@_PARAMETER_@()
    {
        init();
        return com.saabgroup.safir.dob.typesystem.Parameters.get@_REPLACE(^si(..)\..*/Float\1):UNIFORM_PARAMETERTYPE_@(ClassTypeId, m_@_PARAMETER_@Parameter, 0);
    }
@@END_IF@@
@@END_IF@@

@@END_IF@@
@@END_TABLE@@
@@TABLE@@
@@IF@@ @_EXIST:MEMBER_@
    /**
     * Get the member index for @_MEMBER_@.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @return The member index for @_MEMBER_@.
     */
    public static int get@_MEMBER_@MemberIndex() {
        init();
        return m_@_MEMBER_@MemberIndex;
    }

@@IF@@ @_UNIFORM_MEMBERTYPE_@=String
    /**
     * Get the maximum length of the @_MEMBER_@ member.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @return The maximum length of the @_MEMBER_@ string member.
     */
    public static int get@_MEMBER_@MaxStringLength() {
        init();
        return m_@_MEMBER_@Length;
    }

@@END_IF@@
@@IF@@ @_EXIST:MEMBERISARRAY_@
    /**
     * Get the array size of @_MEMBER_@.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @return The array size of @_MEMBER_@.
     */
    public static int get@_MEMBER_@ArraySize() {
        init();
        return m_@_MEMBER_@Size;
    }

@@END_IF@@

    /**
     * Get the member container for @_MEMBER_@.
     *
     * @_MEMBER_@ summary:
@@IF@@ @_EXIST:MEMBERSUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):MEMBERSUMMARY_@
@@ELSE@@
     *     This member has no summary.
@@END_IF@@
     *
     * @return The member container for @_MEMBER_@.
     */
@@----- Array -------
@@IF@@ @_EXIST:MEMBERISARRAY_@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public @_MEMBERTYPE_@.ContainerArray @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public com.saabgroup.safir.dob.typesystem.ArrayContainer<com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_MEMBERTYPE_@=float or @_MEMBERTYPE_@=double or not @_MATCH(.*\..*):UNIFORM_MEMBERTYPE_@
    public com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@ContainerArray @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSE@@
    public @_UNIFORM_MEMBERTYPE_@Container @_LOWER:SLICE(1..1):MEMBER_@@_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
        m_@_MEMBER_@Member = new @_UNIFORM_MEMBERTYPE_@ContainerArray();
@@END_IF@@

@@----- Sequence member
@@ELSIF@@ @_EXIST:MEMBERISSEQUENCE_@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration or @_UNIFORM_MEMBERTYPE_@=Object
    public @_MEMBERTYPE_@.SequenceContainer @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSE@@
    public com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@SequenceContainer @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@END_IF@@
@@----------dictionary member ---------------
@@ELSIF@@ @_EXIST:MEMBERISDICTIONARY_@
@@---------- key: Int32
@@IF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int32"
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public @_MEMBERTYPE_@.DictionaryContainer<Integer> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<Integer, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=String
    public com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<Integer> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Binary
    public com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<Integer> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSE@@
    public com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<Integer, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@END_IF@@
@@---------- key: Int32, TypeId
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int64" or @_UNIFORM_MEMBERDICTIONARYTYPE_@="TypeId"
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public @_MEMBERTYPE_@.DictionaryContainer<Long> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<Long, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=String
    public com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<Long> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Binary
    public com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<Long> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSE@@
    public com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<Long, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@END_IF@@
@@---------- key: all other
@@ELSE@@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public @_MEMBERTYPE_@.DictionaryContainer<@_MEMBERDICTIONARYTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=String
    public com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<@_MEMBERDICTIONARYTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Binary
    public com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<@_MEMBERDICTIONARYTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSE@@
    public com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@END_IF@@
@@END_IF@@
@@------ Single value -------
@@ELSE@@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    public @_MEMBERTYPE_@.Container @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    public com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@> @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSIF@@ @_MEMBERTYPE_@=float or @_MEMBERTYPE_@=double or not @_MATCH(.*\..*):UNIFORM_MEMBERTYPE_@
    public com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container @_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
@@ELSE@@
    public @_UNIFORM_MEMBERTYPE_@Container @_LOWER:SLICE(1..1):MEMBER_@@_LOWER:SLICE(1..1):MEMBER_@@_REPLACE(./):MEMBER_@() {
        m_@_MEMBER_@Member = new @_UNIFORM_MEMBERTYPE_@Container();
@@END_IF@@
@@END_IF@@
        return m_@_MEMBER_@Member;
    }

@@END_IF@@
@@END_TABLE@@
@@TABLE@@

    /**
     * Create routine for @_CLASS_@ objects.
     * (A create routine is like a named constructor.)
     *
     * @_CREATEROUTINE_@ create routine summary:
@@IF@@ @_EXIST:CREATEROUTINESUMMARY_@
     *     @_REPLACE_ALL(\n/\n     *     ):CREATEROUTINESUMMARY_@
@@ELSE@@
     *     This create routine has no summary.
@@END_IF@@
     *
@@IF@@ @_EXIST:CREATEVALUE_@
@@TABLE@@
     * @_CREATEVALUE_@ is assigned a parameter value. See dou file for info.
@@END_TABLE@@
     *
@@END_IF@@
@@IF@@ @_EXIST:CREATEPARAMETER_@
@@TABLE@@
     * @param @_CREATEPARAMETER_@ Value for the @_CREATEPARAMETER_@ member.
@@END_TABLE@@
@@END_IF@@
     * @return @_CLASS_@ Object created by create@_CREATEROUTINE_@
     */
@@IF@@ @_EXIST:CREATEPARAMETER_@
    public static @_CLASS_@ create@_CREATEROUTINE_@ (
@@ELSE@@
    public static @_CLASS_@ create@_CREATEROUTINE_@ ()
@@END_IF@@
@@TABLE@@
@@IF@@ @_EXIST:CREATEPARAMETER_@
@@IF@@ @_EXIST:CREATEPARAMETERISLAST_@
        @_CREATEPARAMETERTYPE_@ @_CREATEPARAMETER_@)
@@ELSE@@
        @_CREATEPARAMETERTYPE_@ @_CREATEPARAMETER_@,
@@END_IF@@
@@END_IF@@
@@END_TABLE@@
    {
        init();
        @_CLASS_@ val = new @_CLASS_@();
@@TABLE@@
@@IF@@ @_EXIST:CREATEPARAMETER_@
@@IF@@ @_EXIST:CREATEPARAMETERISARRAY_@
@@IF@@ @_UNIFORM_CREATEPARAMETERTYPE_@=Object
        val.@_LOWER:SLICE(1..1):CREATEPARAMETER_@@_REPLACE(./):CREATEPARAMETER_@().get(0).setObj(@_CREATEPARAMETER_@);
@@ELSE@@
        val.@_LOWER:SLICE(1..1):CREATEPARAMETER_@@_REPLACE(./):CREATEPARAMETER_@().get(0).setVal(@_CREATEPARAMETER_@);
@@END_IF@@
@@ELSE@@
@@IF@@ @_UNIFORM_CREATEPARAMETERTYPE_@=Object
        val.@_LOWER:SLICE(1..1):CREATEPARAMETER_@@_REPLACE(./):CREATEPARAMETER_@().setObj(@_CREATEPARAMETER_@);
@@ELSE@@
        val.@_LOWER:SLICE(1..1):CREATEPARAMETER_@@_REPLACE(./):CREATEPARAMETER_@().setVal(@_CREATEPARAMETER_@);
@@END_IF@@
@@END_IF@@
@@END_IF@@
@@END_TABLE@@
@@TABLE@@
@@IF@@ @_EXIST:CREATEVALUE_@
@@IF@@ @_EXIST:CREATEVALUEISARRAY_@
    /** Cannot set array members through create routine! */
@@ELSIF@@ @_EXIST:CREATEVALUEPARAMETERINDEX_@
@@IF@@ @_UNIFORM_CREATEVALUETYPE_@=Object
@@IF@@ @_EXIST:CREATEVALUEISINLINE_@
    /** ERROR: Inline values in CreateRoutines with index not supported! */
@@ELSE@@
        val.@_LOWER:SLICE(1..1):CREATEVALUE_@@_REPLACE(./):CREATEVALUE_@().setObj(@_CREATEVALUEPARAMETERCLASS_@.get@_CREATEVALUEPARAMETER_@(@_CREATEVALUEPARAMETERINDEX_@));
@@END_IF@@
@@ELSE@@
@@IF@@ @_EXIST:CREATEVALUEISINLINE_@
    /** ERROR: Inline values in CreateRoutines with index not supported! */
@@ELSE@@
        val.@_LOWER:SLICE(1..1):CREATEVALUE_@@_REPLACE(./):CREATEVALUE_@().setVal(@_CREATEVALUEPARAMETERCLASS_@.get@_CREATEVALUEPARAMETER_@(@_CREATEVALUEPARAMETERINDEX_@));
@@END_IF@@
@@END_IF@@
@@ELSE@@
@@IF@@ @_UNIFORM_CREATEVALUETYPE_@=Object
@@IF@@ @_EXIST:CREATEVALUEISINLINE_@
        // Inline set of object member @_CREATEVALUE_@ value
        int tmp@_LOWER:CREATEVALUE_@index = com.saabgroup.safir.dob.typesystem.Parameters.getIndex(ClassTypeId, "@_CREATEVALUEPARAMETERRAW_@");
        val.@_LOWER:SLICE(1..1):CREATEVALUE_@@_REPLACE(./):CREATEVALUE_@().setObj((@_CREATEVALUEMEMBERTYPE_@)com.saabgroup.safir.dob.typesystem.Parameters.getObject(ClassTypeId, tmp@_LOWER:CREATEVALUE_@index, 0) );
@@ELSE@@
        val.@_LOWER:SLICE(1..1):CREATEVALUE_@@_REPLACE(./):CREATEVALUE_@().setObj(@_CREATEVALUEPARAMETERCLASS_@.get@_CREATEVALUEPARAMETER_@());
@@END_IF@@
@@ELSE@@
@@IF@@ @_EXIST:CREATEVALUEISINLINE_@

        // Inline set of member @_CREATEVALUE_@ value
        int tmp@_LOWER:CREATEVALUE_@index = com.saabgroup.safir.dob.typesystem.Parameters.getIndex(ClassTypeId, "@_CREATEVALUEPARAMETERRAW_@");
        val.@_LOWER:SLICE(1..1):CREATEVALUE_@@_REPLACE(./):CREATEVALUE_@().setVal(com.saabgroup.safir.dob.typesystem.Parameters.get@_UNIFORM_CREATEVALUETYPE_@(ClassTypeId, tmp@_LOWER:CREATEVALUE_@index, 0));
@@ELSE@@
        val.@_LOWER:SLICE(1..1):CREATEVALUE_@@_REPLACE(./):CREATEVALUE_@().setVal(@_CREATEVALUEPARAMETERCLASS_@.get@_CREATEVALUEPARAMETER_@());
@@END_IF@@
@@END_IF@@
@@END_IF@@
@@END_IF@@
@@END_TABLE@@
        return val;
    }

@@END_TABLE@@
    /** The TypeId of the @_UNIT_@ class. */
    public static final long ClassTypeId = @_TYPEID_@L;

    /**
     * @see com.saabgroup.safir.dob.typesystem.Object#getTypeId()
     */
    public long getTypeId()
    {
        return ClassTypeId;
    }

    /**
     * @see com.saabgroup.safir.dob.typesystem.Object#isChanged()
     */
    public boolean isChanged() {
        return
@@IF@@ @_EXIST:MEMBER_@
            super.isChanged() ||
@@ELSE@@
            super.isChanged();
@@END_IF@@
@@TABLE@@
@@IF@@ @_TABLE_LINE_@=@_MEMBER'length_@
            m_@_MEMBER_@Member.isChanged();
@@ELSE@@
            m_@_MEMBER_@Member.isChanged() ||
@@END_IF@@
@@END_TABLE@@
    }

    /**
     * @see com.saabgroup.safir.dob.typesystem.Object#setChanged(boolean)
     */
    public void setChanged(boolean changed) {
        super.setChanged(changed);
@@TABLE@@
        m_@_MEMBER_@Member.setChanged(changed);
@@END_TABLE@@
    }

    /**
     * Create @_CLASS_@ object from blob.
     * @param blob the blob to deserialize.
     */
    public @_CLASS_@(long handle) {
        super(handle);

        init();
@@TABLE@@

@@ --- Array member ---
@@IF@@ @_EXIST:MEMBERISARRAY_@
        //Array
        for (int i = 0; i < m_@_MEMBER_@Size; ++i) {
            com.saabgroup.safir.dob.typesystem.BlobOperations.get(m_@_MEMBER_@Member.get(i), handle, m_@_MEMBER_@MemberIndex, i);
        }

@@ --- Sequence member ---
@@ELSIF@@ @_EXIST:MEMBERISSEQUENCE_@
        //Sequence
        {
            int size = com.saabgroup.safir.dob.typesystem.BlobOperations.numberOfMemberValues(handle, m_@_MEMBER_@MemberIndex);
            for (int i=0; i<size; i++) {
@@IF@@ (@_UNIFORM_MEMBERTYPE_@ = Enumeration)
                int ordinal=com.saabgroup.safir.dob.typesystem.BlobOperations.getInt32(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE);
                m_@_MEMBER_@Member.add(@_MEMBERTYPE_@.values()[ordinal]);
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
                com.saabgroup.safir.dob.typesystem.Object seqVal=com.saabgroup.safir.dob.typesystem.BlobOperations.get@_UNIFORM_MEMBERTYPE_@(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE);
@@IF@@ @_MEMBERTYPE_@="com.saabgroup.safir.dob.typesystem.Object"
                m_@_MEMBER_@Member.add(seqVal);
@@ELSE@@
                m_@_MEMBER_@Member.add((@_MEMBERTYPE_@)seqVal);
@@END_IF@@
@@ELSIF@@ @_MEMBERTYPE_@="float"
                m_@_MEMBER_@Member.add(com.saabgroup.safir.dob.typesystem.BlobOperations.getFloat32(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE));
@@ELSIF@@ @_MEMBERTYPE_@="double"
                m_@_MEMBER_@Member.add(com.saabgroup.safir.dob.typesystem.BlobOperations.getFloat64(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE));
@@ELSE@@
                m_@_MEMBER_@Member.add(com.saabgroup.safir.dob.typesystem.BlobOperations.get@_UNIFORM_MEMBERTYPE_@(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE));
@@END_IF@@
            }
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Object
            m_@_MEMBER_@Member.setChangedHere(com.saabgroup.safir.dob.typesystem.BlobOperations.isChangedTopLevel(handle, m_@_MEMBER_@MemberIndex));
@@ELSE@@
            m_@_MEMBER_@Member.setChanged(com.saabgroup.safir.dob.typesystem.BlobOperations.isChangedTopLevel(handle, m_@_MEMBER_@MemberIndex));
@@END_IF@@
        }
@@----------dictionary member ---------------
@@ELSIF@@ @_EXIST:MEMBERISDICTIONARY_@
        //Dictionary member m_@_MEMBER_@Member
        {
            int size = com.saabgroup.safir.dob.typesystem.BlobOperations.numberOfMemberValues(handle, m_@_MEMBER_@MemberIndex);
            for (int i=0; i<size; i++) {
@@---- Get key
@@IF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int32"
                int key=com.saabgroup.safir.dob.typesystem.BlobOperations.getInt32(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int64" or @_UNIFORM_MEMBERDICTIONARYTYPE_@="TypeId"
                long key=com.saabgroup.safir.dob.typesystem.BlobOperations.getInt64(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="InstanceId"
                com.saabgroup.safir.dob.typesystem.InstanceId key=com.saabgroup.safir.dob.typesystem.BlobOperations.getInstanceId(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="HandlerId"
                com.saabgroup.safir.dob.typesystem.HandlerId key=com.saabgroup.safir.dob.typesystem.BlobOperations.getHandlerId(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="ChannelId"
                com.saabgroup.safir.dob.typesystem.ChannelId key=com.saabgroup.safir.dob.typesystem.BlobOperations.getChannelId(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="EntityId"
                com.saabgroup.safir.dob.typesystem.EntityId key=com.saabgroup.safir.dob.typesystem.BlobOperations.getEntityId(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="String"
                String key=com.saabgroup.safir.dob.typesystem.BlobOperations.getString(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Enumeration"
                int ordinal=com.saabgroup.safir.dob.typesystem.BlobOperations.getInt32(handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
                @_MEMBERDICTIONARYTYPE_@ key=@_MEMBERDICTIONARYTYPE_@.values()[ordinal];
@@ELSE@@
                not supported as key @_UNIFORM_MEMBERDICTIONARYTYPE_@
@@END_IF@@
@@---- Get val
@@IF@@ (@_UNIFORM_MEMBERTYPE_@ = Enumeration)
                @_MEMBERTYPE_@.Container value = new @_MEMBERTYPE_@.Container();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
                com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@> value = new com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>();
@@ELSE@@
                com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container value = new com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container();
@@END_IF@@
                m_@_MEMBER_@Member.put(key, value);
                com.saabgroup.safir.dob.typesystem.BlobOperations.get(value, handle, m_@_MEMBER_@MemberIndex, i);
            } //end dictionary loop

            m_@_MEMBER_@Member.setChangedHere(com.saabgroup.safir.dob.typesystem.BlobOperations.isChangedTopLevel(handle, m_@_MEMBER_@MemberIndex));
        }


@@ --- Single member ---
@@ELSE@@
        com.saabgroup.safir.dob.typesystem.BlobOperations.get(m_@_MEMBER_@Member, handle, m_@_MEMBER_@MemberIndex, 0);
@@END_IF@@
@@END_TABLE@@
    }

    /**
     * @see com.saabgroup.safir.dob.typesystem.Object#writeToBlob(java.nio.ByteBuffer, int)
     */
    @Override
    public void writeToBlob(long handle)
    {
        init();
        super.writeToBlob(handle);
@@TABLE@@

        //@_MEMBER_@
@@ --- Array member ---
@@IF@@ @_EXIST:MEMBERISARRAY_@
        for (int i = 0; i < m_@_MEMBER_@Size; ++i) {
            com.saabgroup.safir.dob.typesystem.BlobOperations.set(m_@_MEMBER_@Member.get(i), handle, m_@_MEMBER_@MemberIndex, i);
        }
@@ --- Sequence member ---
@@ELSIF@@ @_EXIST:MEMBERISSEQUENCE_@
        for (int i=0; i<m_@_MEMBER_@Member.size(); ++i) {
@@IF@@ (@_UNIFORM_MEMBERTYPE_@ = Enumeration)
            com.saabgroup.safir.dob.typesystem.BlobOperations.set(m_@_MEMBER_@Member.get(i).ordinal(), handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE);
@@ELSE@@
            com.saabgroup.safir.dob.typesystem.BlobOperations.set(m_@_MEMBER_@Member.get(i), handle, m_@_MEMBER_@MemberIndex, i, com.saabgroup.safir.dob.typesystem.BlobOperations.VALUE_MODE);
@@END_IF@@
        }
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Object
        com.saabgroup.safir.dob.typesystem.BlobOperations.setChangedTopLevel(handle, m_@_MEMBER_@MemberIndex, m_@_MEMBER_@Member.isChangedHere());
@@ELSE@@
        com.saabgroup.safir.dob.typesystem.BlobOperations.setChangedTopLevel(handle, m_@_MEMBER_@MemberIndex, m_@_MEMBER_@Member.isChanged());
@@END_IF@@

@@----------dictionary member ---------------
@@ELSIF@@ @_EXIST:MEMBERISDICTIONARY_@
@@---------- key: Int32
@@IF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int32"
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
        for(java.util.Map.Entry<Integer, @_MEMBERTYPE_@.Container> entry : m_@_MEMBER_@Member.entrySet()) {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
        for(java.util.Map.Entry<Integer, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>> entry : m_@_MEMBER_@Member.entrySet()) {
@@ELSE@@
        for(java.util.Map.Entry<Integer, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container> entry : m_@_MEMBER_@Member.entrySet()) {
@@END_IF@@
@@---------- key: Int64, TypeId
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int64" or @_UNIFORM_MEMBERDICTIONARYTYPE_@="TypeId"
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
        for(java.util.Map.Entry<Long, @_MEMBERTYPE_@.Container> entry : m_@_MEMBER_@Member.entrySet()) {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
        for(java.util.Map.Entry<Long, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>> entry : m_@_MEMBER_@Member.entrySet()) {
@@ELSE@@
        for(java.util.Map.Entry<Long, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container> entry : m_@_MEMBER_@Member.entrySet()) {
@@END_IF@@
@@---------- key: all other
@@ELSE@@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
        for(java.util.Map.Entry<@_MEMBERDICTIONARYTYPE_@, @_MEMBERTYPE_@.Container> entry : m_@_MEMBER_@Member.entrySet()) {
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
        for(java.util.Map.Entry<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>> entry : m_@_MEMBER_@Member.entrySet()) {
@@ELSE@@
        for(java.util.Map.Entry<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container> entry : m_@_MEMBER_@Member.entrySet()) {
@@END_IF@@
@@END_IF@@
@@----- set the key
@@IF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@=Enumeration
            com.saabgroup.safir.dob.typesystem.BlobOperations.set(entry.getKey().ordinal(), handle, m_@_MEMBER_@MemberIndex, 0, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@ELSE@@
            com.saabgroup.safir.dob.typesystem.BlobOperations.set(entry.getKey(), handle, m_@_MEMBER_@MemberIndex, 0, com.saabgroup.safir.dob.typesystem.BlobOperations.KEY_MODE);
@@END_IF@@
@@----- set the value
            com.saabgroup.safir.dob.typesystem.BlobOperations.set(entry.getValue(), handle, m_@_MEMBER_@MemberIndex, 0);
        }
        com.saabgroup.safir.dob.typesystem.BlobOperations.setChangedTopLevel(handle, m_@_MEMBER_@MemberIndex, m_@_MEMBER_@Member.isChangedHere());
@@ --- Single member ---
@@ELSE@@
        com.saabgroup.safir.dob.typesystem.BlobOperations.set(m_@_MEMBER_@Member, handle, m_@_MEMBER_@MemberIndex, 0);
@@END_IF@@
@@END_TABLE@@

    }


    /**
     * @see com.saabgroup.safir.dob.typesystem.Object#getMember(int, int)
     */
    public com.saabgroup.safir.dob.typesystem.ContainerBase getMember(int member, int index){
        init();
@@TABLE@@
@@IF@@ @_TABLE_LINE_@=1
        if (member == m_@_MEMBER_@MemberIndex) {
@@ELSE@@
        else if (member == m_@_MEMBER_@MemberIndex) {
@@END_IF@@
@@IF@@ @_EXIST:MEMBERISARRAY_@
            if (index < 0 || index >= m_@_MEMBER_@Size) {
                throw new com.saabgroup.safir.dob.typesystem.IllegalValueException("Invalid index into @_MEMBER_@ array");
            }
            return m_@_MEMBER_@Member.get(index);
@@ELSE@@
            if (index != 0) {
                throw new com.saabgroup.safir.dob.typesystem.SoftwareViolationException("Member @_MEMBER_@ is not an array");
            }
            return m_@_MEMBER_@Member;
@@END_IF@@
        }
@@END_TABLE@@
@@IF@@ @_EXIST:MEMBER_@
        else {
            return super.getMember(member, index);
        }
@@ELSE@@
        return super.getMember(member, index);
@@END_IF@@
    }


@@---------- Start of private member declaration ------------
    // private member declaration
@@TABLE@@
@@----- Array member
@@IF@@ @_EXIST:MEMBERISARRAY_@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    private @_MEMBERTYPE_@.ContainerArray m_@_MEMBER_@Member = new @_MEMBERTYPE_@.ContainerArray(get@_MEMBER_@ArraySize());
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    private @_MEMBERTYPE_@.ContainerArray m_@_MEMBER_@Member = new @_MEMBERTYPE_@.ContainerArray(get@_MEMBER_@ArraySize());
@@ELSE@@
    private com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@ContainerArray m_@_MEMBER_@Member = new com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@ContainerArray(get@_MEMBER_@ArraySize());
@@END_IF@@
@@----- Sequence member
@@ELSIF@@ @_EXIST:MEMBERISSEQUENCE_@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration or @_UNIFORM_MEMBERTYPE_@=Object
    private @_MEMBERTYPE_@.SequenceContainer m_@_MEMBER_@Member = new @_MEMBERTYPE_@.SequenceContainer();
@@ELSE@@
    private com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@SequenceContainer m_@_MEMBER_@Member = new com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@SequenceContainer();
@@END_IF@@
@@----- Dictionary member
@@ELSIF@@ @_EXIST:MEMBERISDICTIONARY_@
@@---------- key: Int32
@@IF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int32"
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    private @_MEMBERTYPE_@.DictionaryContainer<Integer> m_@_MEMBER_@Member = new @_MEMBERTYPE_@.DictionaryContainer<Integer>();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    private com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<Integer, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<Integer, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@>
       (new com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>().getClass());
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=String
    private com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<Integer> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<Integer>();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Binary
    private com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<Integer> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<Integer>();
@@ELSE@@
    private com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<Integer, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<Integer, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@>
       (com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container.class);
@@END_IF@@
@@---------- key: Int32, TypeId
@@ELSIF@@ @_UNIFORM_MEMBERDICTIONARYTYPE_@="Int64" or @_UNIFORM_MEMBERDICTIONARYTYPE_@="TypeId"
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    private @_MEMBERTYPE_@.DictionaryContainer<Long> m_@_MEMBER_@Member = new @_MEMBERTYPE_@.DictionaryContainer<Long>();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    private com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<Long, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<Long, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@>
       (new com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>().getClass());
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=String
    private com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<Long> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<Long>();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Binary
    private com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<Long> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<Long>();
@@ELSE@@
    private com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<Long, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<Long, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@>
       (com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container.class);
@@END_IF@@
@@---------- key: all other
@@ELSE@@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    private @_MEMBERTYPE_@.DictionaryContainer<@_MEMBERDICTIONARYTYPE_@> m_@_MEMBER_@Member = new @_MEMBERTYPE_@.DictionaryContainer<@_MEMBERDICTIONARYTYPE_@>();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    private com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.ObjectDictionaryContainer<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>, @_MEMBERTYPE_@>
       (new com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>().getClass());
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=String
    private com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<@_MEMBERDICTIONARYTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.StringDictionaryContainer<@_MEMBERDICTIONARYTYPE_@>();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Binary
    private com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<@_MEMBERDICTIONARYTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.BinaryDictionaryContainer<@_MEMBERDICTIONARYTYPE_@>();
@@ELSE@@
    private com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@> m_@_MEMBER_@Member =
        new com.saabgroup.safir.dob.typesystem.ValueDictionaryContainer<@_MEMBERDICTIONARYTYPE_@, com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container, @_BOXEDTYPE_@>
       (com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container.class);

@@END_IF@@
@@END_IF@@
@@----- Single member
@@ELSE@@
@@IF@@ @_UNIFORM_MEMBERTYPE_@=Enumeration
    private @_MEMBERTYPE_@.Container m_@_MEMBER_@Member = new @_MEMBERTYPE_@.Container();
@@ELSIF@@ @_UNIFORM_MEMBERTYPE_@=Object
    private com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@> m_@_MEMBER_@Member = new com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_MEMBERTYPE_@>();
@@ELSE@@
    private com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container m_@_MEMBER_@Member = new com.saabgroup.safir.dob.typesystem.@_UNIFORM_MEMBERTYPE_@Container();
@@END_IF@@

@@END_IF@@
@@END_TABLE@@
@@---------- End of private member declaration ------------

    private static void init() {
        if(!m_isInitialized)
        {
@@TABLE@@
@@IF@@ @_EXIST:PARAMETER_@
            m_@_PARAMETER_@Parameter = com.saabgroup.safir.dob.typesystem.Parameters.getIndex(ClassTypeId, "@_PARAMETER_@");
@@END_IF@@
@@END_TABLE@@
@@TABLE@@
@@IF@@ @_EXIST:MEMBER_@
            m_@_MEMBER_@MemberIndex = com.saabgroup.safir.dob.typesystem.Members.getIndex(ClassTypeId, "@_MEMBER_@");
@@IF@@ @_UNIFORM_MEMBERTYPE_@=String
            m_@_MEMBER_@Length = com.saabgroup.safir.dob.typesystem.Members.getMaxStringLength(ClassTypeId, m_@_MEMBER_@MemberIndex);
@@END_IF@@
@@IF@@ @_EXIST:MEMBERISARRAY_@
            m_@_MEMBER_@Size = com.saabgroup.safir.dob.typesystem.Members.getArraySize(ClassTypeId, m_@_MEMBER_@MemberIndex);
@@END_IF@@
@@END_IF@@
@@END_TABLE@@

            m_isInitialized = true;
        }
    }

    private static boolean m_isInitialized = false;

@@TABLE@@
@@IF@@ @_EXIST:PARAMETER_@
    private static int m_@_PARAMETER_@Parameter = -1;
@@END_IF@@
@@END_TABLE@@
@@TABLE@@
@@IF@@ @_EXIST:MEMBER_@
    private static int m_@_MEMBER_@MemberIndex = -1;
@@IF@@ @_UNIFORM_MEMBERTYPE_@=String
    private static int m_@_MEMBER_@Length = -1;
@@END_IF@@
@@IF@@ @_EXIST:MEMBERISARRAY_@
    private static int m_@_MEMBER_@Size = -1;
@@END_IF@@
@@END_IF@@
@@END_TABLE@@

    /**
     * Array for ObjectContainers
     */
    static public class ContainerArray
        extends com.saabgroup.safir.dob.typesystem.ArrayContainer<com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_CLASS_@>> {

        private static java.util.ArrayList<com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_CLASS_@>> createBlankArray(int size){
            java.util.ArrayList<com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_CLASS_@>> initializedArray =
                new java.util.ArrayList<com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_CLASS_@>>(size);
            for (int i = 0; i < size; ++i) {
                initializedArray.add(new com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_CLASS_@>());
            }
            return initializedArray;
        }

        /**
         * Constructor with size.
         *
         * Creates an array of the given size. Remember that once it has been created the size cannot be changed.
         *
         * @param size The desired size of the array. Must be > 0.
         */
        public ContainerArray(int size) {
            super(createBlankArray(size));
        }

        /**
         * Construct an array containing the specified array.
         *
         * @param initializedArray the array to use.
         */
        public ContainerArray(java.util.ArrayList<com.saabgroup.safir.dob.typesystem.ObjectContainerImpl<@_CLASS_@>> initializedArray) {
            super(initializedArray);
        }
    }

    /**
     * Sequence container
     */
    static public class SequenceContainer
        extends com.saabgroup.safir.dob.typesystem.GenericObjectSequenceContainer<@_CLASS_@> {
    }

}
@@ELSIF@@ @_UNITTYPE_@=enumeration
@@--
@@-- ENUMERATION
@@--
@@IF@@ @_EXIST:CLASSSUMMARY_@
/**
 * @_REPLACE_ALL(\n/\n * ):CLASSSUMMARY_@
 */
@@ELSE@@
/**
 * This enum has no summary.
 */
@@END_IF@@
public enum @_CLASS_@
{
@@TABLE@@
    /** @_ENUMVALUE_@ enum value */
@@IF@@ @_TABLE_LINE_@=@_ENUMVALUE'length_@
    @_ENUMVALUE_@;
@@ELSE@@
    @_ENUMVALUE_@,

@@END_IF@@
@@END_TABLE@@

    /** EnumerationId for @_CLASS_@. */
    public static final long EnumerationId = @_TYPEID_@L;

    /** Checksum for @_CLASS_@. */
    public static final long Checksum = @_CHECKSUM_@L;

    /**
     * Convert an enum value to the string as it is specified in the Dou file.
     * The normal toString for enumerations will return "ENUM_VALUE", whereas this
     * method will return "EnumValue".
     *
     * @return The string of the enumeration as specified in the dou file.
     */
    public String toDouString() {
        return com.saabgroup.safir.dob.typesystem.Operations.getEnumerationValueName(EnumerationId, this.ordinal());
    }

    /**
     * Convert the dou string value of an enum to an enum value.
     * @see #toDouString for an explanation of "dou enum strings".
     *
     * @return The enum value corresponding to the string.
     * @throws IllegalValueException There is no such type defined or it is not an enumeration.
     */
    static public @_CLASS_@ fromDouString(String str) {
        return @_CLASS_@.values()[com.saabgroup.safir.dob.typesystem.Operations.getEnumerationValue(EnumerationId,str)];
    }

    /**
     * Check that there is no enumeration mismatch
     * throws an exception if there is - ConfigurationErrorException
     * call this like this from your application (somewhere in the startup code):
     *   @_UNIT_@.checkForMismatch(@_UNIT_@.Checksum);
     * The checksum that you are passing to this function is compiled into your application
     * so that if the enum changes the checksum in your application will be different than that
     * in safir_generated, which will mean that an exception is thrown.
     *
     * @param checksum the checksum to check against.
     */
    public static void checkForMismatch(long checksum) {
        if (checksum != Checksum)
        {
            throw new com.saabgroup.safir.dob.typesystem.ConfigurationErrorException("Type mismatch in type @_UNIT_@. Recompile your application!");
        }
    }

    /**
     * Container for the enumeration @_CLASS_@
     */
    static public class Container
        extends com.saabgroup.safir.dob.typesystem.EnumerationContainerBase<@_UNIT_@> {
        /**
         * Default constructor (constructs a null and not changed container).
         */
       public Container() {
           super();
       }

       @Override
       protected int getNumValues() {
           return @_UNIT_@.values().length;
       }

       /**
        * @see com.saabgroup.safir.dob.typesystem.EnumerationContainerBase#getVal()
        */
       @Override
       public @_CLASS_@ getVal() {
           return @_UNIT_@.values()[getOrdinal()];
       }
    }

    /**
     * Array for @_CLASS_@Containers
     */
    static public class ContainerArray
        extends com.saabgroup.safir.dob.typesystem.ArrayContainer<Container> {

        private static java.util.ArrayList<Container> createBlankArray(int size){
            java.util.ArrayList<Container> initializedArray = new java.util.ArrayList<Container>(size);
            for (int i = 0; i < size; ++i) {
                initializedArray.add(new Container());
            }
            return initializedArray;
        }

        /**
         * Constructor with size.
         *
         * Creates an array of the given size. Remember that once it has been created the size cannot be changed.
         *
         * @param size The desired size of the array. Must be > 0.
         */
        public ContainerArray(int size) {
            super(createBlankArray(size));
        }

        /**
         * Construct an array containing the specified array.
         *
         * @param initializedArray the array to use.
         */
        public ContainerArray(java.util.ArrayList<Container> initializedArray) {
            super(initializedArray);
        }
    }

    /**
     * Sequence for @_CLASS_@
     */
    @SuppressWarnings("unchecked")
    static public class SequenceContainer
        extends com.saabgroup.safir.dob.typesystem.EnumerationSequenceContainer<@_CLASS_@> {
        SequenceContainer() {
@@TABLE@@
@@IF@@ @_TABLE_LINE_@=1
            super((Class<@_CLASS_@>)@_ENUMVALUE_@.getClass());
@@END_IF@@
@@END_TABLE@@
        }
    }


    /**
     * Dictionary container
     */
    static public class DictionaryContainer<K>
        extends com.saabgroup.safir.dob.typesystem.DictionaryContainer<K,Container> {

        public Container putVal(K key, @_CLASS_@ value) {
            m_isChanged=true;
            Container container = new Container();
            container.setVal(value);

            return m_values.put(key, container);
        }
    }

}
@@ELSIF@@ @_UNITTYPE_@=exception
@@--
@@-- EXCEPTION
@@--
@@IF@@ @_EXIST:CLASSSUMMARY_@
/**
 * @_REPLACE_ALL(\n/\n * ):CLASSSUMMARY_@
 */
@@ELSE@@
/**
 * This exception has no summary.
 */
@@END_IF@@
public class @_CLASS_@ extends @_BASECLASS_@ {

    /**
     * Constructor with exception information.
     *
     * @param message A message describing why the exception occurred.
     */
    public @_CLASS_@(String message) {
        super(message);
    }

    /**
     * The TypeId of this exception type.
     */
    public static final long ExceptionTypeId = @_TYPEID_@L;

    /**
     * Get the type id of this exception.
     *
     * Gets the type id of the exception. Method is virtual to ensure that the right
     * value gets returned for pointers or references.
     *
     * Note: This method is overridden by all auto-generated classes.
     *
     * @return The TypeId of the exception object.
     */
    public long getTypeId() {
        return ExceptionTypeId;
    }

    private static final long serialVersionUID = 1L;

}
@@END_IF@@
@@END_IF@@
