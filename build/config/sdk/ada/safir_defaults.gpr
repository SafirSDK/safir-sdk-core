--  ===========================================================================
--  ==              Copyright (C) SAAB 2009 - 2012
--  ===========================================================================
--
--  This file is part of Safir SDK Core.
--
--  Safir SDK Core is free software: you can redistribute it and/or modify
--  it under the terms of version 3 of the GNU General Public License as
--  published by the Free Software Foundation.
--
--  Safir SDK Core is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with Safir SDK Core.  If not, see <http://www.gnu.org/licenses/>.
--
-- ============================================================================
project Safir_Defaults is

   --
   --  This File contains default compiler settiongs for GCC/GNAT for Ada
   --  using Gprbuild.
   --

   type OS_Type is ("Windows_NT","Linux");

   type Build_Type is ("Release", "RelWithDebInfo", "Debug");

   type Boolean is ("False", "True");

   OS               : OS_Type           := External ("OS", "Linux");

   Build            : Build_Type        := External ("BUILD", "Debug");

   -- ========================================================================
   -- Directories
   -- ========================================================================
   for Source_Files use ();
   for Source_Dirs use ();

   -- ========================================================================
   -- BUILDER
   -- ========================================================================
   package Builder is
      for Default_Switches ("Ada") use
        ("-C", -- Cache source mappings
         "-k", -- Keep going after compilation errors
         "-s", -- Recompile if compiler switches have changed
         "-g", -- Enable Debug information
         "-j" &  External ("NUMBER_OF_PROCESSORS", "2"));
      case Build is
         when "Debug" =>
            for Global_Configuration_Pragmas use "configuration_pragmas.gnat";
         when "Release" =>
         when "RelWithDebInfo" =>
            null;
      end case;
   end Builder;

   -- ========================================================================
   -- COMPILER
   -- ========================================================================
   package Compiler is
      for Default_Switches ("Ada") use
        ("-gnatef",                -- Full source path in brief error messages
         "-gnatq",                 -- Don't quit, try semantics, even if parse errors
         "-gnatQ",                 -- Don't quit, write ali/tree file even if compile errors
         "-gnat05",                -- Full Ada05
         --"-gnato",                 -- Overflow checking enabled.
         --"-fcallgraph-info=su",    -- Output callgraph information
         --"-fstack-usage",          -- Output stack usage information
         --"-march=" & Architecture, -- Target processor
         --"-fstack-check",          -- Since we are running multiple threads.
         --"-gnateDOS=" & OS,        -- For Conditional Compilation
         "-gnatwa",                 -- Turn on all optional warnings (except d,h,l)
         "-gnatwbdhl");              -- Warn for every thing.

      -- Style checks
      for Default_Switches ("Ada") use
              Compiler'Default_Switches ("Ada") &
            ("-gnaty" &
             "3" & --  check indentation
             "a"  & --  check attribute casing
             "A"  & --  check array attribute indexes
             "b"  & --  check no blanks at end of lines
             --"c"  & --  check comment format
             -- "d"  & --  check no DOS line terminators
             "e"  & --  check end/exit labels present
             "f"  & --  check no form feeds/vertical tabs in source
             "h"  & --  check no horizontal tabs in source
             "i"  & --  check if-then layout
             --"I"  & --  check mode in
             "k"  & --  check casing rules for keywords
             "l"  & --  check reference manual layout
             --- "L4" & -- check max nest level < nn
             "n"  & --  check casing of package Standard identifiers
             --"M128" &  -- check line length <= nn  characters
             --"o"  & --  check subprogram bodies in alphabetical order
             "p"  & --  check pragma casing
             "r"  & --  check casing for identifier references
             --"s"  & --  check separate subprogram specs present
             "t"  & --  check token separation rules
             -- "u"  & --  check no unnecessary blank lines
             "x"  & -- check extra parens around conditionals
             "");

      case Build is
         when "Release" =>
            for Default_Switches ("Ada") use
              Compiler'Default_Switches ("Ada") &
            ("-O2",     -- Full optimisation.
             "-gnatn"); -- Inlining of subprograms.

         when "RelWithDebInfo" =>
            for Default_Switches ("Ada") use
              Compiler'Default_Switches ("Ada") &
            ("-g",
             "-O2",     -- Full optimisation.
             "-gnatn"); -- Inlining of subprograms.

         when "Debug" =>
            for Default_Switches ("Ada") use
              Compiler'Default_Switches ("Ada") &
            ("-g",
             "-gnatVa", -- Turn on all validity checking options
             "-O0",     -- Optimisation level 0 (-Wuninitialized inefective)
             "-gnato",  -- Enable overflow checking (off by default)
             "-gnata"); -- Enable assertions.
      end case;

   end Compiler;

   -- ========================================================================
   -- LINKER
   -- ========================================================================
   package Linker is
      case Build is
         when "Debug" =>
            for Default_Switches ("Ada") use
              Linker'Default_Switches ("Ada") &
            ("-g");
         when others =>
            null;
      end case;
   end Linker;

   -- ========================================================================
   -- Binder
   -- ========================================================================
   package Binder is
      for Default_Switches ("Ada") use
         ("-E" -- Include Stack traceback in Exception message.
         );
   end Binder;

end Safir_Defaults;
