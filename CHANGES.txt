-----------------------------------------------------------------------------------------------------------------------
2015-07-23 version 6.0
-----------------------------------------------------------------------------------------------------------------------

This release introduces the following changes:

* Complete redesign and rewrite of the low level communication mechanism. This has a number of advantages:
  - Support for arbitrary number of nodes.
  - Support for exclusion of misbehaving nodes.
  - Support for more network topologies.
  - Removal of error-prone general node join handling.
  - Simpler configuration for systems with many nodes.
  - Synchronized system picture

* Enable completely read-only installations of Safir SDK Core:
  - Create native installation packages for Windows and Linux (currently for Debian-based distributions).
  - Allows separation of dou-file collections into separate modules.
  - Remove the "tower" concept from Core.

* Addition of dynamic types to the type system:
  - Added support for "Sequence" - similar to std::vector in C++ or ArrayList in C#
  - Added support for "Dictionary" - similar to std::map in C++ or Dictionary in C#
  - Use Google Protobuf for internal data exchange instead of proprietary binary serialization.

* A whole load of bug fixes (see ticket list at http://safirsdkcore.com for details).

Notes:
* The User's guide has not been updated with information about the new features. The
  documentation for these will be part of a future 6.1 release.
* The Ada interfaces are not included in this release since they have not been updated to
  use the new internal interfaces.

-----------------------------------------------------------------------------------------------------------------------
2014-06-02 version 5.0.1
-----------------------------------------------------------------------------------------------------------------------

This release fixes the following tickets (see http://safir.sourceforge.net for details):

#167    Improve alignment in DistributionData
#166    Less than operator of WrapAroundCounter is broken
#165    stop() in TracerBackdoor in java is not public
#164    Douf unit test fails to report a failure
#162    ConfigReader does not support symlinked config directory
#161    Dobexplorer memory graph shows 50% memory all the time
#160    Property mapping order of elements
#158    Array parameter format
#157    Dobexplorer needs more documentation
#156    Tweak output of xml_convert.py
#155    No description of Binary in User's Guide
#154    "Special variables" are not expanded in dou files
#153    Safir.Dob.ProcessInfo entity shows incorrect process name
#152    String corruption in boost.interprocess or boost.container
#151    Backdoor ping reply
#150    Remove Windows specific scripts
#148    Add logotype to SUG
#142    Wrong blob size
#141    XmlToBlob empty arrays
#140    xml_convert.py empty elements
#139    Users guide typesystem.ini missing information
#138    Tweak Doxygen documentation
#136    Rewrite start and stop scripts in python

-----------------------------------------------------------------------------------------------------------------------
2014-02-28 version 5.0
-----------------------------------------------------------------------------------------------------------------------

This release introduces the following changes:

* Rewrite of the parser and serializer in Typesystem (Dots):
 - New public parser interface that can be used for building tools that need to understand the xml.
 - More robust parsing - detects a lot of errors that previously would cause random failures.
 - More language features now actually work - previously some constructions caused dots_kernel to give up.
 - New and better XML object serialization - much more terse and also easier for 3rd party tools to understand.
 - Backwards compatible - still understands old XML serialized objects.
 - Provides a script that translates from old to new XML syntax.
 - Add support for character references (e.g. &#12;) and CDATA for parameters.
 - JSON object serialization.
 - No longer depends on the Expat XML parser, instead uses Boost Property Tree. This means that Expat is no longer a 
   dependency for Safir SDK Core.

* Visibility set correctly on GCC, as described in http://gcc.gnu.org/wiki/Visibility. Makes it possible to build 
  stuff on top of Safir SDK Core with c++11 enabled, even if the SDK is built with it disabled.

* Internal changes and cleanups.

* Some bug fixes, among which the most notable ones are (see http://safir.sourceforge.net for details):

#128    Incorrect triggering of Ensure in WaitingStates::Add
#126    Bad performance when injecting entities

-----------------------------------------------------------------------------------------------------------------------
2013-12-19 version 4.5.4:
-----------------------------------------------------------------------------------------------------------------------

This release fixes the following tickets (see http://safir.sourceforge.net for details):

#122    Douf fallback implementation of GetUtcOffset is wrong for some timezones
#123    dobmake crashes when used on "non-english" Windows installations
#125    Add support for Visual Studio 2012 and 2013

-----------------------------------------------------------------------------------------------------------------------
2013-12-03 version 4.5.3:
-----------------------------------------------------------------------------------------------------------------------

This release fixes the following tickets (see http://safir.sourceforge.net for details):

#113    dots_configuration_check crashes when run from dobmake.
#117    Dobmake fails with cmake 2.8.12.1
#118    Dobexplorer fails to link on Windows when using Qt5
#119    Image on page 2 in user's guide is not scaled properly in PDF
#120    No revision information in PDF version of Users guide

-----------------------------------------------------------------------------------------------------------------------
2013-10-29 version 4.5.2:
-----------------------------------------------------------------------------------------------------------------------

This release fixes the following ticket (see http://safir.sourceforge.net for details):

#110    AceTimeConverter causes linking error

-----------------------------------------------------------------------------------------------------------------------
2013-10-23 version 4.5.1:
-----------------------------------------------------------------------------------------------------------------------

This release fixes the following tickets (see http://safir.sourceforge.net for details):

#108    Clean up more dobmake stuff in prepare_for_distribution.py 
#107    Build in dobmake does not work (as opposed to rebuild)
#106    Dobmake prints out erroneous error message
#105    Singleton in Boost.Interprocess breaks mixed debug/â€‹release runtimes on Windows
#103    StartupSynchronizer works badly with mixed debug and release runtimes on Windows
#102    Crash dump monitor test fails spuriously
#101    Close button on dose_main in windows does not send stop orders.
#99     Update Dobexplorer to support Qt5
#92     dose_communication should use Safir Log or LowLevelLogger
#90     A rejected injected entity is not set to deletedByOwner

When fixing the last ticket, #90, we realized that the deletedByOwner flag has no useful meaning since at least
version 4 of Safir SDK Core. Consequently, this flag is now deprecated.

-----------------------------------------------------------------------------------------------------------------------
2013-10-12 version 4.5:
-----------------------------------------------------------------------------------------------------------------------

This release introduces the following changes:

* Removed all internal dependencies to ACE (use Boost.Asio instead).
* SwReports have been replaced with Safir Logging. Safir Logging is an interface to Syslog (as defined by RFC3164),
  which allows Safir SDK Core to log to a syslog daemon, instead of using the non-standard SwReport mechanism.
  - Added functionality under Safir.Logging for logging (see User's Guide for more info).
  - The "old" functions under Safir.SwReports are now deprecated but they have been changed to log to Safir Logging.
  - All Core components now report errors to Safir Log (instead of stdout/lllerr/panic log).
  - ResponseSender/Proxy usage errors are now reported to Safir Log, instead of crashing the app.
  - Tracer rewritten to use Safir Logging.
* Added a lot of automatic tests.
* Support for 64 bit Windows installs added.
* Made missing external time provider cause exceptions instead of just silently failing.
* Rewrote build script and dobmake.py to use jom for parallel builds.
* Rewrote dots_v in python (removes a lot of Ada dependencies!)
* Numerous minor bug fixes!

This release is 99% backwards compatible, but due to a couple of bug fixes and especially the introduction of Safir
Logging (the Syslog interface) some interfaces have had to be changed or adjusted. Below is a summary of the interface
changes. You can find more information about the changes introduced due to the introduction of Safir Logging in the
Safir User's Guide.

 * The representation of binaries in blobs has changed slightly (there was a redundant field, that has been removed). 
   This means that blobs containing binaries produced by previous SDK versions will not be readable by this version.
   So make sure to convert any blobs that you wish to bring along to xml before upgrade and then back to blob after 
   the upgrade.
   For blobs stored in the persistent storage you can use dope_bin2xml to do this. See User's Guide for more info.

 * The Object Factory in Ada has been renamed. It is now found under Safir.Dob.Typesystem.Object.Factory.

 * The loading of an External Time Provider (configured in in Safir.Time.LibraryParameters.dou) has changed so that an
   exception will be thrown if the library cannot be found. Previously the failure would be ignored silently.
   The default configuration has changed from trying to load a library called 'tiha.dll' to not try to load any library
   at all. So if you want to continue using a library by that name you will have to make changes to 
   Safir.Time.LibraryParameters.dou, to make sure the correct library is loaded and that the correct functions
   within that library are used.

 * Safir Logging / Syslog related changes (See Safir SDK Core User's Guide for details):
   - Tracer needs to be started explicitly.
   - Tracer flushes its data differently.
   - Tracer.SetProgramName has been removed.
   - Crash Reporter start and stop functions have been renamed.

 * The BackdoorKeeper interface has been changed to keep it in line with how the TracerBackdoor interface looks.
   It now takes a connection as argument to the constructor, and it is that connection that the backdoor will 
   use to subscribe to the backdoor commands. 

-----------------------------------------------------------------------------------------------------------------------
2013-06-25 version 4.4:
-----------------------------------------------------------------------------------------------------------------------

This release is intended to implement the "First Step" chapter from the paper "Readonly installation of Safir
SDK Core" (https://projekt.consoden.se/safir/job/Whitepapers/lastSuccessfulBuild/artifact/readonly_install.html).

 * Add use of configuration (ini) files that allow for configuring some directories that the SDK Core uses to store
temporary files during runtime:
    - lock files
    - crash dumps
    - low level logs
   Ini file parser supports environment variable and "special variable" (e.g. Windows Known Folders) expansion.
   Default configuration puts all files in the "old" locations.

 * Add "special variable" expansion to dou/dom file parser.

 * Add ability to specify where dou/dom files should be found (also configured in ini file), which allows for
   "parameter overlays".

 * Bugfixes:
    - Ada warning in dots_generated
    - dots_generated shared library loading on Linux
    - static evaluation order bugfix in dots_cpp
    - remove unused function DotsC_BinaryDump

